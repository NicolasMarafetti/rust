// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Craft {
  id                  String            @id @default(auto()) @map("_id") @db.ObjectId
  craftedItem         Item              @relation(fields: [craftedItemId], references: [id])
  craftedItemId       String            @db.ObjectId
  craftedItemQuantity Int
  CraftIngredient     CraftIngredient[]
  duration            Int
  workbenchLevel      Int
}

model CraftIngredient {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  craft              Craft  @relation(fields: [craftId], references: [id], onDelete: Cascade)
  craftId            String @db.ObjectId
  ingredient         Item   @relation(fields: [ingredientId], references: [id])
  ingredientId       String @db.ObjectId
  ingredientQuantity Int
}

model Item {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  category        ItemCategory      @relation(fields: [categoryId], references: [id])
  categoryId      String            @db.ObjectId
  imageUrl        String
  name            String
  scrapValue      Float
  saleItems       Shopping[]        @relation("SaleItemRelation")
  costItems       Shopping[]        @relation("CostItemRelation")
  Craft           Craft[]
  CraftIngredient CraftIngredient[]
  Recycler        Recycler[]
  RecyclerYield   RecyclerYield[]
}

model ItemCategory {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  Item Item[]
}

model Recycler {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  Item          Item            @relation(fields: [ItemId], references: [id])
  ItemId        String          @db.ObjectId
  RecyclerYield RecyclerYield[]
}

model RecyclerYield {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  recycler    Recycler @relation(fields: [recyclerId], references: [id], onDelete: Cascade)
  recyclerId  String   @db.ObjectId
  yieldItem   Item     @relation(fields: [yieldItemId], references: [id])
  yieldItemId String   @db.ObjectId
  quantity    Int
}

model Shopping {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  shopName         String
  saleItem         Item   @relation("SaleItemRelation", fields: [saleItemId], references: [id])
  saleItemId       String @db.ObjectId
  saleItemQuantity Int
  costItem         Item   @relation("CostItemRelation", fields: [costItemId], references: [id])
  costItemId       String @db.ObjectId
  costItemQuantity Int
}
